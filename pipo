`timescale 1ns / 1ps

module tb_pipo();
reg [3:0] in;
reg clk;
wire [3:0] out;

pipo dut(in,clk,out);

always #3 clk=~clk;
initial begin
$monitor("In=%b | clk=%b | Out=%b",in,clk,out);
#0; in=4'h0; clk=0; 
#3; in=4'h5;
#3; in=4'hb;
#3; in=4'hf;
#6; in=4'h2;
#30; $finish;
end
endmodule
`timescale 1ns / 1ps

module pipo(in,clk,out);
input [3:0] in;
input clk;
output [3:0] out;
reg q0,q1,q2,q3;

always@(posedge clk)
begin

q3<=in[3];
q2<=in[2];
q1<=in[1];
q0<=in[0];

end
assign out[0]=q0;
assign out[1]=q1;
assign out[2]=q2;
assign out[3]=q3;
endmodule
