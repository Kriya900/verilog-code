`timescale 1ns / 1ps

module siso(in,clk,q3,q2,q1,q0);
input in,clk;
output reg  q3,q2,q1,q0;


always@(posedge clk)
begin
q3<=in;
q2<=q3;
q1<=q2;
q0<=q1;
end

assign out = q0;
endmodule  
`timescale 1ns / 1ps

module tb_siso();
reg in,clk;
wire q3,q2,q1,q0;

  siso dut(in,clk,q3,q2,q1,q0);

always #1 clk=~clk;
always #4 in=~in;
initial begin
  $monitor("In=%b | clk=%b | q3,q2,q1,q0=%b",in,clk,q3,q2,q1,q0);
#0; in=0; clk=0; 
#10; $finish;
end
endmodule
In=0 | clk=0 | q3,q2,q1,q0=xxxx
# In=0 | clk=1 | q3,q2,q1,q0=0xxx
# In=0 | clk=0 | q3,q2,q1,q0=0xxx
# In=0 | clk=1 | q3,q2,q1,q0=00xx
# In=1 | clk=0 | q3,q2,q1,q0=00xx
# In=1 | clk=1 | q3,q2,q1,q0=100x
# In=1 | clk=0 | q3,q2,q1,q0=100x
# In=1 | clk=1 | q3,q2,q1,q0=1100
# In=0 | clk=0 | q3,q2,q1,q0=1100
# In=0 | clk=1 | q3,q2,q1,q0=0110
