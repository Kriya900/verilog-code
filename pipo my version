`timescale 1ns / 1ps

module pipo(in,clk,q3,q2,q1,q0);
input [3:0] in;
input clk;
  output reg[3:0] q3,q2,q1,q0;


always@(posedge clk)
begin

q3<=in[3];
q2<=in[2];
q1<=in[1];
q0<=in[0];

end
endmodule
// Code your testbench here
// or browse Examples
`timescale 1ns / 1ps

module tb_pipo();
reg [3:0] in;
reg clk;
  wire [3:0] q3,q2,q1,q0;

  pipo dut(in,clk,q3,q2,q1,q0);

always #3 clk=~clk;
initial begin
  $monitor("In=%b | clk=%b | q3,q2,q1,q0=%b",in,clk,q3,q2,q1,q0);
#0; in=4'h0; clk=0; 
#3; in=4'h5;
#3; in=4'hb;
#3; in=4'hf;
#6; in=4'h2;
#30; $finish;
end
endmodule
# In=0000 | clk=0 | q3,q2,q1,q0=xxxx x x x
# In=0101 | clk=1 | q3,q2,q1,q0=0000 1 0 1
# In=1011 | clk=0 | q3,q2,q1,q0=0000 1 0 1
# In=1111 | clk=1 | q3,q2,q1,q0=0001 1 1 1
# In=1111 | clk=0 | q3,q2,q1,q0=0001 1 1 1
# In=0010 | clk=1 | q3,q2,q1,q0=0000 0 1 0
# In=0010 | clk=0 | q3,q2,q1,q0=0000 0 1 0
# In=0010 | clk=1 | q3,q2,q1,q0=0000 0 1 0
# In=0010 | clk=0 | q3,q2,q1,q0=0000 0 1 0
# In=0010 | clk=1 | q3,q2,q1,q0=0000 0 1 0
# In=0010 | clk=0 | q3,q2,q1,q0=0000 0 1 0
# In=0010 | clk=1 | q3,q2,q1,q0=0000 0 1 0
# In=0010 | clk=0 | q3,q2,q1,q0=0000 0 1 0
# In=0010 | clk=1 | q3,q2,q1,q0=0000 0 1 0
# In=0010 | clk=0 | q3,q2,q1,q0=0000 0 1 0
