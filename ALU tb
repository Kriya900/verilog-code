Testbench
// Code your testbench here
// or browse Examples
module ALU_Tb;
  reg[7:0] A;
  reg [7:0]B;
  reg[2:0] opcode;
  wire[15:0] result;
  wire zero;
  ALU uut(A,B,opcode,result,zero); //Instantiate ALU
  
  initial begin
    $dumpfile("ALU_wave.vcd");
    $dumpvars(0, ALU_Tb);
  
    A=4'd5; B= 4'd3;
    $monitor("Time = %0t|A =%d| B=%d|opcode= %b|result=%d |zero = %b" ,   $time,A,B,opcode,result,zero);
    opcode = 3'b000; #10;
    $display("A =%d,B= %d,opcode=%b,result =%d" , A,B,opcode,result);
    opcode = 3'b001; #10;
    $display("A =%d,B= %d,opcode=%b,result =%d" , A,B,opcode,result);

    opcode = 3'b010; #10;
    $display("A =%d,B= %d,opcode=%b,result =%d" , A,B,opcode,result);

    opcode = 3'b101;#10;
        $display("A =%d,B= %d,opcode=%b,result =%d" , A,B,opcode,result);
    opcode = 3'b111; #10;
        $display("A =%d,B= %d,opcode=%b,result =%d" , A,B,opcode,result);
      $finish;
  end
endmodule
module ALU(
  input [7:0] A,
  input [7:0] B,
  input [2:0] opcode,
  output reg[15:0] result,
  output zero
);
  assign zero = (result==0);
  always@(*)begin
    case(opcode)
      3'b000: result = A+B;//ADD
      3'b001: result = A-B;//SUB
      3'b010: result = A ^ B;//OR
      3'b101: result = A|B; //XOR
      3'b111: result =A *B; //MUL
      default: result = 0 ;
    endcase
  end
endmodule

    
