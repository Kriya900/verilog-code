// Half Adder Module
module HalfAdder(input A, input B, output Sum, output Carry);
    assign Sum = A ^ B;
    assign Carry = A & B;
endmodule

// Full Adder Module using two Half Adders
module FullAdder(input A, input B, input Cin, output Sum, output Cout);
    wire s1, c1, c2;

    HalfAdder HA1(A, B, s1, c1);
    HalfAdder HA2(s1, Cin, Sum, c2);
    assign Cout = c1 | c2;
endmodule
module FullAdder_tb;
    reg A, B, Cin;
    wire Sum, Cout;

    FullAdder FA(A, B, Cin, Sum, Cout);

    initial begin
        $dumpfile("fa.vcd");
        $dumpvars(0, FullAdder_tb);
        $display("A B Cin | Sum Cout");

        A=0; B=0; Cin=0; #10; $display("%b %b  %b  |  %b    %b", A,B,Cin,Sum,Cout);
        A=0; B=0; Cin=1; #10; $display("%b %b  %b  |  %b    %b", A,B,Cin,Sum,Cout);
        A=0; B=1; Cin=0; #10; $display("%b %b  %b  |  %b    %b", A,B,Cin,Sum,Cout);
        A=0; B=1; Cin=1; #10; $display("%b %b  %b  |  %b    %b", A,B,Cin,Sum,Cout);
        A=1; B=0; Cin=0; #10; $display("%b %b  %b  |  %b    %b", A,B,Cin,Sum,Cout);
        A=1; B=0; Cin=1; #10; $display("%b %b  %b  |  %b    %b", A,B,Cin,Sum,Cout);
        A=1; B=1; Cin=0; #10; $display("%b %b  %b  |  %b    %b", A,B,Cin,Sum,Cout);
        A=1; B=1; Cin=1; #10; $display("%b %b  %b  |  %b    %b", A,B,Cin,Sum,Cout);

        $finish;
    end
endmodule
